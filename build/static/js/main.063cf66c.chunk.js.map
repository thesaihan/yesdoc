{"version":3,"sources":["utils/Constants.js","pages/EmployeeDetailPage.js","pages/EmployeeListPage.js","pages/UseCredit.js","pages/TransHistory.js","App.js","serviceWorker.js","index.js"],"names":["API_ENDPOINT","EmployeeDetailPage","match","history","useHistory","useState","memberId","name","address","dateOfBirth","employerName","credits","emp","setEmp","useEffect","params","id","Axio","get","then","res","data","_id","push","catch","error","console","onEmpChange","e","newEmp","Object","assign","target","getAttribute","value","goNew","className","onClick","disabled","toFixed","onSubmit","preventDefault","patch","alert","err","log","post","htmlFor","type","aria-describedby","readOnly","required","onChange","delete","EmployeeListPage","empList","setEmpList","a","async","fetchEmpList","map","key","to","UseCredit","amount","setAmount","nModified","step","goBack","TransHistory","transList","setTransList","fetchEmp","fetchTransList","length","trans","Date","datetime","toLocaleString","year","month","day","hour","minute","second","hour12","App","path","component","exact","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mXAAaA,EAAe,mCCwLbC,EAjLY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtBC,EAAUC,cADwB,EAElBC,mBDNf,CACLC,SAAU,GACVC,KAAM,GACNC,QAAS,GACTC,YAAa,GACbC,aAAc,GACdC,QAAS,ICF6B,mBAEjCC,EAFiC,KAE5BC,EAF4B,KAIxCC,qBAAU,WACJZ,EAAMa,OAAOC,GACfC,IAAKC,IAAIlB,EAAY,oBAAgBE,EAAMa,OAAOC,KAC/CG,MAAK,SAAAC,GACDA,EAAIC,KAAKC,IACVT,EAAOO,EAAIC,MAEXlB,EAAQoB,KAAK,gBAEhBC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdtB,EAAQoB,KAAK,gBAGjBV,EDtBG,CACLP,SAAU,GACVC,KAAM,GACNC,QAAS,GACTC,YAAa,GACbC,aAAc,GACdC,QAAS,MCkBR,CAACT,EAAMa,OAAOC,KAEjB,IAAMW,EAAc,SAAAC,GAClB,IAAMC,EAASC,OAAOC,OAAO,GAAInB,GACjCiB,EAAOD,EAAEI,OAAOC,aAAa,OAASL,EAAEI,OAAOE,MAC/CrB,EAAOgB,IAKHM,EAAQ,kBAAMhC,EAAQoB,KAAK,cAsDjC,OACE,yBAAKa,UAAU,qCACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,yCACb,4BAAQC,QA7DH,kBAAMlC,EAAQoB,KAAK,mBA6DCa,UAAU,gCAAnC,QACA,4BAAQC,QAASF,EAAOC,UAAU,oCAAoCE,UAAUpC,EAAMa,OAAOC,IAA7F,OACA,4BAAQqB,QA3DE,kBAAMlC,EAAQoB,KAAR,sBAA4BrB,EAAMa,OAAOC,MA2D3BoB,UAAU,+BAA+BE,UAAUpC,EAAMa,OAAOC,IAA9F,gBAGJ,yBAAKoB,UAAU,YACb,yBAAKA,UAAU,gDAAgDpB,GAAG,WAChE,0BAAMA,GAAG,UAAT,KAAqBJ,EAAID,QAAUC,EAAID,QAAQ,GAAK4B,QAAQ,OAIlE,yBAAKH,UAAU,8BACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,qFACb,0BAAMI,SAAUtC,EAAMa,OAAOC,GArDtB,SAAAY,GACfA,EAAEa,iBACC7B,EAAIH,YACPQ,IAAKyB,MAAM1C,EAAY,oBAAgBE,EAAMa,OAAOC,IAAMJ,GACzDO,MAAK,SAAAC,GACDA,EAAIC,KAAKC,IACVqB,MAAM,YAENA,MAAM,wBAGTnB,OAAM,SAAAoB,GAAG,OAAIlB,QAAQmB,IAAID,MACrBD,MAAM,yBA5BE,SAAAf,GACbA,EAAEa,iBACC7B,EAAIH,YACPQ,IAAK6B,KAAK9C,EAAe,YAAaY,GACrCO,MAAK,SAAAC,GACDA,EAAIC,KAAKC,KACVqB,MAAM,UACNxC,EAAQoB,KAAR,oBAA0BH,EAAIC,KAAKC,OAEnCqB,MAAM,sBAGTnB,OAAM,SAAAoB,GAAG,OAAIlB,QAAQmB,IAAID,MACrBD,MAAM,0BAyDD,wBAAIP,UAAU,oBAAd,wBACA,yBAAKA,UAAU,cACb,2BAAOW,QAAQ,YAAf,gBACA,2BACEC,KAAK,OACLZ,UAAU,+CACVpB,GAAG,WACHiC,mBAAiB,eACjBC,WAAUhD,EAAMa,OAAOC,GACvBsB,WAAUpC,EAAMa,OAAOC,GACvBkB,MAAOtB,EAAIN,SACX6C,UAAQ,EACRC,SAAUzB,IAEZ,2BAAOX,GAAG,eAAeoB,UAAU,wBAAnC,yDAIF,yBAAKA,UAAU,cACb,2BAAOW,QAAQ,QAAf,WACA,2BACEC,KAAK,OACLZ,UAAU,yBACVpB,GAAG,OACHiC,mBAAiB,WACjBf,MAAOtB,EAAIL,KACX4C,UAAQ,EACRC,SAAUzB,KAGd,yBAAKS,UAAU,cACb,2BAAOW,QAAQ,eAAf,oBACA,2BACEC,KAAK,OACLZ,UAAU,yBACVpB,GAAG,cACHiC,mBAAiB,WACjBf,MAAOtB,EAAIH,YACX2C,SAAUzB,KAGd,yBAAKS,UAAU,cACb,2BAAOW,QAAQ,gBAAf,oBACA,2BACEC,KAAK,OACLZ,UAAU,yBACVpB,GAAG,eACHiC,mBAAiB,mBACjBf,MAAOtB,EAAIF,aACX0C,SAAUzB,KAGd,yBAAKS,UAAU,cACb,2BAAOW,QAAQ,WAAf,cACA,8BACEX,UAAU,yBACVpB,GAAG,UACHiC,mBAAiB,cACjBf,MAAOtB,EAAIJ,QACX4C,SAAUzB,KAGd,2BAAOqB,KAAK,SAASZ,UAAU,eAAeF,MAAM,SACpD,4BAAQG,QAtGH,SAAAT,GACfA,EAAEa,iBACFxB,IAAKoC,OAAOrD,EAAY,oBAAgBE,EAAMa,OAAOC,KACpDG,MAAK,SAAAC,GACDA,EAAIC,KAAKC,KACVqB,MAAM,YACNR,KAEAQ,MAAM,uBAGTnB,OAAM,SAAAoB,GAAG,OAAIlB,QAAQmB,IAAID,OA2FWR,UAAU,sBAAsBE,UAAUpC,EAAMa,OAAOC,IAAlF,UACA,4BAAQqB,QAzFJ,SAAAT,GACdA,EAAEa,iBACFtC,EAAQoB,KAAR,wBAA8BrB,EAAMa,OAAOC,MAuFPoB,UAAU,2BAA2BE,UAAUpC,EAAMa,OAAOC,IAAtF,+B,gBCvHCsC,G,MAjDU,WACvB,IAAMnD,EAAUC,cADa,EAECC,mBAAS,IAFV,mBAEtBkD,EAFsB,KAEbC,EAFa,KAiB7B,OAJA1C,qBAAU,YATW,mBAAA2C,EAAAC,OAAA,2EAAAD,EAAA,MAECxC,IAAKC,IAAIlB,EAAe,cAFzB,OAEXoB,EAFW,OAGjBoC,EAAWpC,EAAIC,MAHE,gDAKjBK,QAAQD,MAAR,MALiB,wDAUnBkC,MAIA,yBAAKvB,UAAU,mCACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,yCAAd,qBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,4BAAQC,QAAS,kBAAMlC,EAAQoB,KAAK,cAAca,UAAU,iDAA5D,eAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACZmB,EAAQK,KAAI,SAAAhD,GAAG,OACd,kBAAC,IAAD,CACEiD,IAAKjD,EAAIU,IACTwC,GAAI,aAAelD,EAAIU,IACvBc,UAAU,8EAEV,4BAAKxB,EAAIN,UACT,4BAAKM,EAAIL,kBC4DdwD,G,MAjGG,SAAC,GAAe,IAAb7D,EAAY,EAAZA,MACbC,EAAUC,cADe,EAETC,mBAAS,IAFA,mBAExBO,EAFwB,KAEnBC,EAFmB,OAGHR,mBAAS,GAHN,mBAGxB2D,EAHwB,KAGhBC,EAHgB,KAK/BnD,qBAAU,WACJZ,EAAMa,OAAOC,GACfC,IAAKC,IAAIlB,EAAY,oBAAgBE,EAAMa,OAAOC,KAC/CG,MAAK,SAAAC,GACAA,EAAIC,KAAKC,IAAKT,EAAOO,EAAIC,MACxBlB,EAAQoB,KAAK,gBAEnBC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdtB,EAAQoB,KAAK,gBAGjBpB,EAAQoB,KAAK,eAEd,CAACrB,EAAMa,OAAOC,KAsCjB,OACE,yBAAKoB,UAAU,4BACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,qFACb,0BAAMI,SAlCI,SAAAZ,GAClBA,EAAEa,iBACa,IAAXuB,EACF/C,IAAK6B,KAAK9C,EAAY,6BAAyBY,EAAIU,KAAO,CACxD0C,OAAQA,IAEP7C,MAAK,SAAAC,GACAA,EAAIC,KAAK6C,UAAY,EACvBjD,IAAK6B,KAAK9C,EAAY,uBAAmBY,EAAIU,KAAO,CAClD0C,OAAQA,IAEP7C,MAAK,SAAAC,GACAA,EAAIC,KAAKC,IACXnB,EAAQoB,KAAR,oBAA0BX,EAAIU,MAE9BqB,MAAM,iCAGTnB,OAAM,SAAAoB,GAAG,OAAIlB,QAAQmB,IAAID,MAE5BD,MAAM,+BAGTnB,OAAM,SAAAoB,GAAG,OAAIlB,QAAQmB,IAAID,MAE5BD,MAAM,mCAUE,wBAAIP,UAAU,oBAAd,OAAsCxB,EAAIL,MAC1C,yBAAK6B,UAAU,cACb,2BAAOW,QAAQ,UAAf,aACA,2BACEC,KAAK,SACLZ,UAAU,yBACVpB,GAAG,SACHiC,mBAAiB,aACjBf,MAAO8B,EACPb,UAAQ,EACRC,SApDI,SAAAxB,GAAC,OAAIqC,EAAUrC,EAAEI,OAAOE,QAqD5BiC,KAAK,QAEP,2BAAOnD,GAAG,eAAeoB,UAAU,wBAAnC,+CAIF,4BAAQC,QAzDL,SAAAT,GACbA,EAAEa,iBACFtC,EAAQiE,UAuD2BhC,UAAU,gBAAnC,kBAGA,2BACEY,KAAK,SACLZ,UAAU,oBACVF,MAAM,aACNI,UAAW0B,GAAqB,IAAXA,WCZtBK,G,MA3EM,SAAC,GAAa,IAAZnE,EAAW,EAAXA,MACfC,EAAUC,cADgB,EAEEC,mBAAS,IAFX,mBAEzBiE,EAFyB,KAEdC,EAFc,OAGVlE,mBAAS,IAHC,mBAGzBO,EAHyB,KAGpBC,EAHoB,KA8BhC,OALAC,qBAAU,YAVO,mBAAA2C,EAAAC,OAAA,2EAAAD,EAAA,MAEKxC,IAAKC,IAAIlB,EAAY,oBAAgBE,EAAMa,OAAOC,MAFvD,OAEPI,EAFO,OAGbP,EAAOO,EAAIC,MAHE,gDAKbK,QAAQD,MAAR,MACAZ,EAAO,IANM,wDAWf2D,GArBqB,mBAAAf,EAAAC,OAAA,2EAAAD,EAAA,MAEDxC,IAAKC,IAAIlB,EAAY,uBAAmBE,EAAMa,OAAOC,MAFpD,OAEbI,EAFa,OAGnBmD,EAAanD,EAAIC,MAHE,gDAKnBK,QAAQD,MAAR,MACA8C,EAAa,IANM,wDAsBrBE,KACC,CAACvE,EAAMa,OAAOC,KAGf,yBAAKoB,UAAU,+BACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,yCAAd,uBACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,4BAAQC,QAASlC,EAAQiE,OAAQhC,UAAU,qCAA3C,oBAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,2BAAd,eAAoD,0BAAMA,UAAU,YAAYxB,EAAIN,WACpF,wBAAI8B,UAAU,gCAAd,UAAoD,0BAAMA,UAAU,aAAaxB,EAAIL,SAGzF,yBAAK6B,UAAU,OACb,yBAAKA,UAAU,OACZkC,EAAUI,OAAS,EAAK,yBAAKtC,UAAU,cACrCkC,EAAUV,KAAI,SAAAe,GAAK,OAClB,4BACEd,IAAKc,EAAMrD,IACXc,UAAW,mDAAqDuC,EAAMX,OAAO,EAAI,UAAU,WAE3F,wBAAI5B,UAAU,aAAd,OAA+BuC,EAAMX,QAAQzB,QAAQ,IACrD,wBAAIH,UAAU,YAAY,IAAIwC,KAAKD,EAAME,UAAUC,eAAe,QAAS,CACzEC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,UAIR,YChDPC,MAjBf,WACE,OACE,yBAAKlD,UAAU,sBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,KAAK,IAAIC,UAAWvF,EAAoBwF,OAAK,IACpD,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWlC,IACxC,kBAAC,IAAD,CAAOiC,KAAK,gBAAgBC,UAAWvF,IACvC,kBAAC,IAAD,CAAOsF,KAAK,YAAYC,UAAWvF,IACnC,kBAAC,IAAD,CAAOsF,KAAK,kBAAkBC,UAAWzB,IACzC,kBAAC,IAAD,CAAOwB,KAAK,oBAAoBC,UAAWnB,QCN/CqB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5F,MACvB,2DAsCN,SAAS6F,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT7E,MAAK,SAAAkF,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BjF,QAAQmB,IACN,iHAKEoD,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlB3E,QAAQmB,IAAI,sCAGRoD,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,WAO5B7E,OAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,MCzFjEqF,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDe1C,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,GAAwBvB,OAAOC,SAASuB,MACpDC,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMmB,GAAN,sBAEPzB,IAgEV,SAAiCM,EAAOC,GAEtCsB,MAAMvB,EAAO,CACXwB,QAAS,CAAE,iBAAkB,YAE5BrG,MAAK,SAAAsG,GAEJ,IAAMC,EAAcD,EAASD,QAAQtG,IAAI,gBAEnB,MAApBuG,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C1B,UAAUC,cAAc0B,MAAM1G,MAAK,SAAAkF,GACjCA,EAAayB,aAAa3G,MAAK,WAC7ByE,OAAOC,SAASkC,eAKpBhC,EAAgBC,EAAOC,MAG1BzE,OAAM,WACLE,QAAQmB,IACN,oEAvFAmF,CAAwBhC,EAAOC,GAI/BC,UAAUC,cAAc0B,MAAM1G,MAAK,WACjCO,QAAQmB,IACN,iHAMJkD,EAAgBC,EAAOC,OCtC/BE,K","file":"static/js/main.063cf66c.chunk.js","sourcesContent":["export const API_ENDPOINT = \"https://yesdoc-api.herokuapp.com\";\r\n\r\nexport const getDefaultEmp = () => {\r\n  return {\r\n    memberId: \"\",\r\n    name: \"\",\r\n    address: \"\",\r\n    dateOfBirth: \"\",\r\n    employerName: \"\",\r\n    credits: 0.0\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./EmployeeDetailPage.css\";\r\n\r\nimport Axio from \"axios\";\r\nimport { API_ENDPOINT, getDefaultEmp } from \"../utils/Constants\";\r\n\r\nconst EmployeeDetailPage = ({ match }) => {\r\n  const history = useHistory();\r\n  const [emp, setEmp] = useState(getDefaultEmp());\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      Axio.get(API_ENDPOINT + `/employee/${match.params.id}`)\r\n        .then(res => {\r\n          if(res.data._id)\r\n            setEmp(res.data);\r\n          else\r\n            history.push('/employee');\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n          history.push('/employee');\r\n        });\r\n    } else {\r\n      setEmp(getDefaultEmp());\r\n    }\r\n  }, [match.params.id]);\r\n\r\n  const onEmpChange = e => {\r\n    const newEmp = Object.assign({}, emp);\r\n    newEmp[e.target.getAttribute(\"id\")] = e.target.value;\r\n    setEmp(newEmp);\r\n  };\r\n\r\n  const goList = () => history.push('/employee-list');\r\n\r\n  const goNew = () => history.push('/employee');\r\n\r\n  const goUseCredit = () => history.push(`/use-credit/${match.params.id}`);\r\n\r\n  const goSave = e => {\r\n    e.preventDefault();\r\n    if(emp.dateOfBirth)\r\n    Axio.post(API_ENDPOINT + '/employee', emp)\r\n    .then(res => {\r\n      if(res.data._id){\r\n        alert('Saved!');\r\n        history.push(`/employee/${res.data._id}`);\r\n      }else{\r\n        alert('Failed to Save!');\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n    else alert('Choose Date of Birth');\r\n  };\r\n\r\n  const goUpdate = e => {\r\n    e.preventDefault();\r\n    if(emp.dateOfBirth)\r\n    Axio.patch(API_ENDPOINT + `/employee/${match.params.id}`, emp)\r\n    .then(res => {\r\n      if(res.data._id){\r\n        alert('Updated!');\r\n      }else{\r\n        alert('Failed to Update!');\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n    else alert('Choose Date of Birth');\r\n  };\r\n\r\n  const goDelete = e => {\r\n    e.preventDefault();\r\n    Axio.delete(API_ENDPOINT + `/employee/${match.params.id}`)\r\n    .then(res => {\r\n      if(res.data._id){\r\n        alert('Deleted!');\r\n        goNew();\r\n      }else{\r\n        alert('Failed to Delete');\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  const goTrans = e => {\r\n    e.preventDefault();\r\n    history.push(`/transactions/${match.params.id}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"EmployeeDetailPage container py-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-3\">\r\n          <div className=\"d-flex align-items-center btn-wrapper\">\r\n            <button onClick={goList} className=\"btn btn-info animate-enlarge\">List</button>\r\n            <button onClick={goNew} className=\"btn btn-info mx-2 animate-enlarge\" disabled={match.params.id ? false:true}>New</button>\r\n            <button onClick={goUseCredit} className=\"btn btn-info animate-enlarge\" disabled={match.params.id ? false:true}>Use Credit</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-5\">\r\n          <div className=\"float-right credits text-info animate-enlarge\" id=\"credits\">\r\n            <span id=\"credit\">${(emp.credits ? emp.credits:0.0).toFixed(2)}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-10 col-lg-8\">\r\n          <div className=\"bg-light my-3 py-4 py-sm-5 px-3 px-sm-4 px-md-5 form-wrapper shadow animate-popup\">\r\n            <form onSubmit={match.params.id ? goUpdate:goSave}>\r\n              <h3 className=\"text-center mb-3\">Employee Information</h3>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"memberId\">Member ID : </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control font-weight-bold text-secondary\"\r\n                  id=\"memberId\"\r\n                  aria-describedby=\"memberIdHelp\"\r\n                  readOnly={match.params.id ? true : false}\r\n                  disabled={match.params.id ? true : false}\r\n                  value={emp.memberId}\r\n                  required\r\n                  onChange={onEmpChange}\r\n                />\r\n                <small id=\"memberIdHelp\" className=\"form-text text-muted\">\r\n                  Once Employee Member ID is set, it can't be changed!\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name : </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control text-info\"\r\n                  id=\"name\"\r\n                  aria-describedby=\"nameHelp\"\r\n                  value={emp.name}\r\n                  required\r\n                  onChange={onEmpChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"dateOfBirth\">Date of Birth : </label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control text-info\"\r\n                  id=\"dateOfBirth\"\r\n                  aria-describedby=\"nameHelp\"\r\n                  value={emp.dateOfBirth}\r\n                  onChange={onEmpChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"employerName\">Employer Name : </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control text-info\"\r\n                  id=\"employerName\"\r\n                  aria-describedby=\"employerNameHelp\"\r\n                  value={emp.employerName}\r\n                  onChange={onEmpChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"address\">Address : </label>\r\n                <textarea\r\n                  className=\"form-control text-info\"\r\n                  id=\"address\"\r\n                  aria-describedby=\"addressHelp\"\r\n                  value={emp.address}\r\n                  onChange={onEmpChange}\r\n                />\r\n              </div>\r\n              <input type=\"submit\" className=\"btn btn-info\" value=\"Save\" />\r\n              <button onClick={goDelete} className=\"btn btn-danger ml-2\" disabled={match.params.id ? false:true}>Delete</button>\r\n              <button onClick={goTrans} className=\"btn btn-info float-right\" disabled={match.params.id ? false:true}>Credit History &rarr;</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDetailPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./EmployeeListPage.css\";\r\n\r\nimport Axio from \"axios\";\r\nimport { API_ENDPOINT } from \"../utils/Constants\";\r\n\r\nconst EmployeeListPage = () => {\r\n  const history = useHistory();\r\n  const [empList, setEmpList] = useState([]);\r\n\r\n  const fetchEmpList = async () => {\r\n    try {\r\n      const res = await Axio.get(API_ENDPOINT + \"/employee\");\r\n      setEmpList(res.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmpList();\r\n  });\r\n\r\n  return (\r\n    <div className=\"EmployeeListPage container py-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-10 col-lg-8\">\r\n          <h3 className=\"text-center mt-2 mb-4 animate-enlarge\">List of Employees</h3>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button onClick={() => history.push('/employee')} className=\"btn btn-info float-right mb-3 animate-enlarge\">+ Add New</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"list-group\">\r\n                {empList.map(emp => (\r\n                  <Link\r\n                    key={emp._id}\r\n                    to={\"/employee/\" + emp._id}\r\n                    className=\"list-group-item list-group-item-light list-group-item-action animate-popup\"\r\n                  >\r\n                    <h5>{emp.memberId}</h5>\r\n                    <h6>{emp.name}</h6>\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeListPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./UseCredit.css\";\r\n\r\nimport Axio from \"axios\";\r\nimport { API_ENDPOINT } from \"../utils/Constants\";\r\n\r\nconst UseCredit = ({ match }) => {\r\n  const history = useHistory();\r\n  const [emp, setEmp] = useState({});\r\n  const [amount, setAmount] = useState(0.0);\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      Axio.get(API_ENDPOINT + `/employee/${match.params.id}`)\r\n        .then(res => {\r\n          if (res.data._id) setEmp(res.data);\r\n          else history.push(\"/employee\");\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n          history.push(\"/employee\");\r\n        });\r\n    } else {\r\n      history.push(\"/employee\");\r\n    }\r\n  }, [match.params.id]);\r\n\r\n  const onAmtChange = e => setAmount(e.target.value);\r\n\r\n  const goBack = e => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  const goUseCredit = e => {\r\n    e.preventDefault();\r\n    if (amount !== 0) {\r\n      Axio.post(API_ENDPOINT + `/employee/transact/${emp._id}`, {\r\n        amount: amount\r\n      })\r\n        .then(res => {\r\n          if (res.data.nModified > 0) {\r\n            Axio.post(API_ENDPOINT + `/transaction/${emp._id}`, {\r\n              amount: amount\r\n            })\r\n              .then(res => {\r\n                if (res.data._id) {\r\n                  history.push(`/employee/${emp._id}`);\r\n                } else {\r\n                  alert(\"Failed to Add Transaction!\");\r\n                }\r\n              })\r\n              .catch(err => console.log(err));\r\n          } else {\r\n            alert(\"Failed to Update Credit!\");\r\n          }\r\n        })\r\n        .catch(err => console.log(err));\r\n    } else {\r\n      alert(\"Enter non-zero credit amount!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"UseCredit container py-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-10 col-lg-8\">\r\n          <div className=\"bg-light my-3 py-4 py-sm-5 px-3 px-sm-4 px-md-5 form-wrapper shadow animate-popup\">\r\n            <form onSubmit={goUseCredit}>\r\n              <h3 className=\"text-center mb-3\">Hi, {emp.name}</h3>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"amount\">Amount : </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control text-info\"\r\n                  id=\"amount\"\r\n                  aria-describedby=\"amountHelp\"\r\n                  value={amount}\r\n                  required\r\n                  onChange={onAmtChange}\r\n                  step=\".01\"\r\n                />\r\n                <small id=\"memberIdHelp\" className=\"form-text text-muted\">\r\n                  Enter credit amount you would like to use.\r\n                </small>\r\n              </div>\r\n              <button onClick={goBack} className=\"btn btn-info\">\r\n                &larr; Go Back\r\n              </button>\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-info ml-2\"\r\n                value=\"Use Credit\"\r\n                disabled={!amount || amount === 0}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UseCredit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./TransHistory.css\";\r\n\r\nimport Axio from \"axios\";\r\nimport { API_ENDPOINT } from \"../utils/Constants\";\r\n\r\nconst TransHistory = ({match}) => {\r\n  const history = useHistory();\r\n  const [transList, setTransList] = useState([]);\r\n  const [emp, setEmp] = useState({});\r\n\r\n  const fetchTransList = async () => {\r\n    try {\r\n      const res = await Axio.get(API_ENDPOINT + `/transaction/${match.params.id}`);\r\n      setTransList(res.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setTransList([]);\r\n    }\r\n  };\r\n\r\n  const fetchEmp = async () => {\r\n    try {\r\n      const res = await Axio.get(API_ENDPOINT + `/employee/${match.params.id}`);\r\n      setEmp(res.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setEmp({});\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmp();\r\n    fetchTransList();\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div className=\"TransHistory container py-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-10 col-lg-8\">\r\n          <h3 className=\"text-center mt-2 mb-4 animate-enlarge\">Transaction History</h3>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button onClick={history.goBack} className=\"btn btn-info mb-3 animate-enlarge\">&larr; Go Back</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h5 className=\"text-left animate-popup\">Member ID : <span className=\"memberId\">{emp.memberId}</span></h5>\r\n              <h5 className=\"text-left animate-popup mb-4\">Name : <span className=\"text-info\">{emp.name}</span></h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              {transList.length > 0 ? (<div className=\"list-group\">\r\n                {transList.map(trans => (\r\n                  <button\r\n                    key={trans._id}\r\n                    className={\"list-group-item animate-popup list-group-item-\" + (+trans.amount>0 ? \"success\":\"danger\")}\r\n                  >\r\n                    <h5 className=\"text-left\">$ {(+trans.amount).toFixed(2)}</h5>\r\n                    <h6 className=\"datetime\">{new Date(trans.datetime).toLocaleString(\"en-US\", {\r\n                      year: \"2-digit\",\r\n                      month: \"short\",\r\n                      day: \"2-digit\",\r\n                      hour: \"2-digit\",\r\n                      minute: \"2-digit\",\r\n                      second: \"2-digit\",\r\n                      hour12: true\r\n                    })}</h6>\r\n                  </button>\r\n                ))}\r\n              </div>):null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransHistory;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport EmployeeDetailPage from './pages/EmployeeDetailPage';\nimport EmployeeListPage from './pages/EmployeeListPage';\nimport UseCredit from './pages/UseCredit';\nimport TransHistory from './pages/TransHistory';\n\nfunction App() {\n  return (\n    <div className=\"App text-secondary\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={EmployeeDetailPage} exact/>\n          <Route path=\"/employee-list\" component={EmployeeListPage}/>\n          <Route path=\"/employee/:id\" component={EmployeeDetailPage}/>\n          <Route path=\"/employee\" component={EmployeeDetailPage}/>\n          <Route path=\"/use-credit/:id\" component={UseCredit}/>\n          <Route path=\"/transactions/:id\" component={TransHistory}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}